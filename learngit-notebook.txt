$ git config --global user.name "username"
$ git config --global user.email "email"
$ mkdir dirname
$ cd dirname 
$ pwd
$ git init
$ git add *.*
$ git commit -m "log words"
$ git status 
$ git diff *.*
$ git log 
$ git log --pretty=oneline
$ cat *.*
$ git reset --hard HEAD^
$ git reset --hard HEAD^^
$ git reset --hard HEAD~100
$ git reset --hard daf9af3
$ git reflog
$ git checkout -- *.*	//让这个文件回到最近一次git commit或git add时的状态； git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
$ git reset HEAD *.*	//暂存区的修改回退到工作区; HEAD表示最新的版本
$ rm *.* 				//删除某个文件
$ git rm *.*			//从版本库删除某个文件


/**
*Git-远程仓库
*
*/
$ git remote add origin git@github.com:zmayor/learnGit.git
$ git push -u master 
$ git push master 

$ git checkout -b dev 	//创建并切换新分支
	equal {
		$ git branch dev
		$ git checkout dev //切换到dev分支
	}
$ git branch 			//查看当前分支
$ git merge dev 		//将指定分支合并到当前分支 Fast-forward
$ git branch -d dev		//删除dev分支

$ git stash				//把未提交的工作暂存起来
$ git stash apply		//恢复stash内容
--> $git stash drop 	//删除stash存档
$ git stash pop 		//恢复内容并删除存档
